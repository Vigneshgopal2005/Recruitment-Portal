{"ast":null,"code":"import React,{useState}from'react';import API from'../../api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CreateJob=_ref=>{let{onJobCreated}=_ref;const[title,setTitle]=useState('');const[description,setDescription]=useState('');const handleCreateJob=async()=>{if(!title||!description){alert('Please provide both a title and description.');return;}try{await API.post('/jobs/create',{title,description});alert('Job created successfully!');setTitle('');// Reset form fields\nsetDescription('');onJobCreated();// Notify parent component to refresh the job list\n}catch(error){console.error('Error creating job:',error);alert('Failed to create job. Please try again.');}};return/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px',padding:'10px',border:'1px solid #ccc'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Create New Job\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Job Title\",value:title,onChange:e=>setTitle(e.target.value),style:{display:'block',marginBottom:'10px',padding:'5px',width:'100%'}}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"Job Description\",value:description,onChange:e=>setDescription(e.target.value),style:{display:'block',marginBottom:'10px',padding:'5px',width:'100%',height:'100px'}}),/*#__PURE__*/_jsx(\"button\",{style:{backgroundColor:'#4CAF50',color:'white',padding:'10px 15px',border:'none',borderRadius:'5px',cursor:'pointer'},onClick:handleCreateJob,children:\"Create Job\"})]});};export default CreateJob;","map":{"version":3,"names":["React","useState","API","jsx","_jsx","jsxs","_jsxs","CreateJob","_ref","onJobCreated","title","setTitle","description","setDescription","handleCreateJob","alert","post","error","console","style","marginBottom","padding","border","children","type","placeholder","value","onChange","e","target","display","width","height","backgroundColor","color","borderRadius","cursor","onClick"],"sources":["E:/mern-job-portal/mern-job-portal/mern-job-portal/frontend/src/components/HR/CreateJob.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport API from '../../api';\r\n\r\nconst CreateJob = ({ onJobCreated }) => {\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const handleCreateJob = async () => {\r\n        if (!title || !description) {\r\n            alert('Please provide both a title and description.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await API.post('/jobs/create', { title, description });\r\n            alert('Job created successfully!');\r\n            setTitle(''); // Reset form fields\r\n            setDescription('');\r\n            onJobCreated(); // Notify parent component to refresh the job list\r\n        } catch (error) {\r\n            console.error('Error creating job:', error);\r\n            alert('Failed to create job. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ marginBottom: '20px', padding: '10px', border: '1px solid #ccc' }}>\r\n            <h2>Create New Job</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Job Title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                style={{ display: 'block', marginBottom: '10px', padding: '5px', width: '100%' }}\r\n            />\r\n            <textarea\r\n                placeholder=\"Job Description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                style={{ display: 'block', marginBottom: '10px', padding: '5px', width: '100%', height: '100px' }}\r\n            />\r\n            <button\r\n                style={{\r\n                    backgroundColor: '#4CAF50',\r\n                    color: 'white',\r\n                    padding: '10px 15px',\r\n                    border: 'none',\r\n                    borderRadius: '5px',\r\n                    cursor: 'pointer',\r\n                }}\r\n                onClick={handleCreateJob}\r\n            >\r\n                Create Job\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateJob;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,GAAG,KAAM,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5B,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAAsB,IAArB,CAAEC,YAAa,CAAC,CAAAD,IAAA,CAC/B,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACW,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAElD,KAAM,CAAAa,eAAe,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CAACJ,KAAK,EAAI,CAACE,WAAW,CAAE,CACxBG,KAAK,CAAC,8CAA8C,CAAC,CACrD,OACJ,CAEA,GAAI,CACA,KAAM,CAAAb,GAAG,CAACc,IAAI,CAAC,cAAc,CAAE,CAAEN,KAAK,CAAEE,WAAY,CAAC,CAAC,CACtDG,KAAK,CAAC,2BAA2B,CAAC,CAClCJ,QAAQ,CAAC,EAAE,CAAC,CAAE;AACdE,cAAc,CAAC,EAAE,CAAC,CAClBJ,YAAY,CAAC,CAAC,CAAE;AACpB,CAAE,MAAOQ,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC3CF,KAAK,CAAC,yCAAyC,CAAC,CACpD,CACJ,CAAC,CAED,mBACIT,KAAA,QAAKa,KAAK,CAAE,CAAEC,YAAY,CAAE,MAAM,CAAEC,OAAO,CAAE,MAAM,CAAEC,MAAM,CAAE,gBAAiB,CAAE,CAAAC,QAAA,eAC5EnB,IAAA,OAAAmB,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBnB,IAAA,UACIoB,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,WAAW,CACvBC,KAAK,CAAEhB,KAAM,CACbiB,QAAQ,CAAGC,CAAC,EAAKjB,QAAQ,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC1CP,KAAK,CAAE,CAAEW,OAAO,CAAE,OAAO,CAAEV,YAAY,CAAE,MAAM,CAAEC,OAAO,CAAE,KAAK,CAAEU,KAAK,CAAE,MAAO,CAAE,CACpF,CAAC,cACF3B,IAAA,aACIqB,WAAW,CAAC,iBAAiB,CAC7BC,KAAK,CAAEd,WAAY,CACnBe,QAAQ,CAAGC,CAAC,EAAKf,cAAc,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAChDP,KAAK,CAAE,CAAEW,OAAO,CAAE,OAAO,CAAEV,YAAY,CAAE,MAAM,CAAEC,OAAO,CAAE,KAAK,CAAEU,KAAK,CAAE,MAAM,CAAEC,MAAM,CAAE,OAAQ,CAAE,CACrG,CAAC,cACF5B,IAAA,WACIe,KAAK,CAAE,CACHc,eAAe,CAAE,SAAS,CAC1BC,KAAK,CAAE,OAAO,CACdb,OAAO,CAAE,WAAW,CACpBC,MAAM,CAAE,MAAM,CACda,YAAY,CAAE,KAAK,CACnBC,MAAM,CAAE,SACZ,CAAE,CACFC,OAAO,CAAEvB,eAAgB,CAAAS,QAAA,CAC5B,YAED,CAAQ,CAAC,EACR,CAAC,CAEd,CAAC,CAED,cAAe,CAAAhB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}