{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\mern-job-portal\\\\mern-job-portal\\\\frontend\\\\src\\\\components\\\\HR\\\\UpdateApplication.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport API from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateApplication = ({\n  jobId\n}) => {\n  _s();\n  const [applications, setApplications] = useState([]);\n  const [status, setStatus] = useState('');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchApplications = async () => {\n      try {\n        const {\n          data\n        } = await API.get(`/jobs/${jobId}`);\n        setApplications(data.applications);\n      } catch (error) {\n        var _error$response, _error$response$data;\n        setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to fetch applications');\n      }\n    };\n    fetchApplications();\n  }, [jobId]);\n  const handleStatusUpdate = async applicationId => {\n    try {\n      await API.patch(`/jobs/update-status/${jobId}/${applicationId}`, {\n        status\n      });\n      alert('Status updated successfully');\n      setApplications(prev => prev.map(app => app._id === applicationId ? {\n        ...app,\n        status\n      } : app));\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to update status');\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  }\n  if (!applications.length) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No applications available for this job.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Application Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), applications.map(app => {\n      var _app$userId;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User: \", ((_app$userId = app.userId) === null || _app$userId === void 0 ? void 0 : _app$userId.name) || 'Anonymous']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", app.status || 'Pending']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setStatus(e.target.value),\n          value: status,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"waiting list\",\n            children: \"Waiting List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"accepted\",\n            children: \"Accepted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"rejected\",\n            children: \"Rejected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleStatusUpdate(app._id),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, app._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdateApplication, \"cSG3tXYVr7Tkj3Rs/67ZaUBOduE=\");\n_c = UpdateApplication;\nexport default UpdateApplication;\nvar _c;\n$RefreshReg$(_c, \"UpdateApplication\");","map":{"version":3,"names":["React","useEffect","useState","API","jsxDEV","_jsxDEV","UpdateApplication","jobId","_s","applications","setApplications","status","setStatus","error","setError","fetchApplications","data","get","_error$response","_error$response$data","response","message","handleStatusUpdate","applicationId","patch","alert","prev","map","app","_id","_error$response2","_error$response2$data","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_app$userId","userId","name","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Downloads/mern-job-portal/mern-job-portal/frontend/src/components/HR/UpdateApplication.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport API from '../../api';\r\n\r\nconst UpdateApplication = ({ jobId }) => {\r\n    const [applications, setApplications] = useState([]);\r\n    const [status, setStatus] = useState('');\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchApplications = async () => {\r\n            try {\r\n                const { data } = await API.get(`/jobs/${jobId}`);\r\n                setApplications(data.applications);\r\n            } catch (error) {\r\n                setError(error.response?.data?.message || 'Failed to fetch applications');\r\n            }\r\n        };\r\n        fetchApplications();\r\n    }, [jobId]);\r\n\r\n    const handleStatusUpdate = async (applicationId) => {\r\n        try {\r\n            await API.patch(`/jobs/update-status/${jobId}/${applicationId}`, { status });\r\n            alert('Status updated successfully');\r\n            setApplications((prev) =>\r\n                prev.map((app) =>\r\n                    app._id === applicationId ? { ...app, status } : app\r\n                )\r\n            );\r\n        } catch (error) {\r\n            alert(error.response?.data?.message || 'Failed to update status');\r\n        }\r\n    };\r\n\r\n    if (error) {\r\n        return <p>Error: {error}</p>;\r\n    }\r\n\r\n    if (!applications.length) {\r\n        return <p>No applications available for this job.</p>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Update Application Status</h2>\r\n            {applications.map((app) => (\r\n                <div key={app._id}>\r\n                    <p>User: {app.userId?.name || 'Anonymous'}</p>\r\n                    <p>Status: {app.status || 'Pending'}</p>\r\n                    <select\r\n                        onChange={(e) => setStatus(e.target.value)}\r\n                        value={status}\r\n                    >\r\n                        <option value=\"waiting list\">Waiting List</option>\r\n                        <option value=\"accepted\">Accepted</option>\r\n                        <option value=\"rejected\">Rejected</option>\r\n                    </select>\r\n                    <button onClick={() => handleStatusUpdate(app._id)}>Update</button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpdateApplication;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}