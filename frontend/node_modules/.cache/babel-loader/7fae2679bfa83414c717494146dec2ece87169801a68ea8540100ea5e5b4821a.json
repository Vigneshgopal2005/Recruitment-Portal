{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vignesh G\\\\Downloads\\\\mern-job-portal\\\\mern-job-portal\\\\mern-job-portal\\\\frontend\\\\src\\\\components\\\\HR\\\\UpdateApplication.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport API from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateApplication = ({\n  jobId\n}) => {\n  _s();\n  const [applications, setApplications] = useState([]);\n  useEffect(() => {\n    const fetchApplications = async () => {\n      try {\n        const {\n          data\n        } = await API.get(`/jobs/${jobId}/applications`);\n        setApplications(data.applications);\n      } catch (error) {\n        console.error('Error fetching applications:', error);\n      }\n    };\n    fetchApplications();\n  }, [jobId]);\n  const updateStatus = async (applicationId, newStatus) => {\n    try {\n      await API.patch(`/jobs/update-status/${jobId}/${applicationId}`, {\n        status: newStatus\n      });\n      setApplications(applications.map(app => app._id === applicationId ? {\n        ...app,\n        status: newStatus\n      } : app));\n    } catch (error) {\n      console.error('Error updating status:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), applications.map(app => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", app.userId.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", app.userId.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Resume: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `http://localhost:5000/${app.resume}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", app.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateStatus(app._id, 'waiting'),\n        children: \"Waiting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateStatus(app._id, 'accepted'),\n        children: \"Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateStatus(app._id, 'rejected'),\n        children: \"Reject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, app._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdateApplication, \"/nbs5sQL2UzqDwq/om4lghfycVI=\");\n_c = UpdateApplication;\nconst handleStatusChange = async (applicationId, status) => {\n  try {\n    await API.post(`/applications/update-status`, {\n      applicationId,\n      status\n    });\n    alert(`Status updated to ${status} and email sent!`);\n    const {\n      data\n    } = await API.get(`/applications/${jobId}`);\n    setApplications(data);\n  } catch (error) {\n    console.error('Error updating status:', error);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), applications.length > 0 ? applications.map(app => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ddd',\n        padding: '10px',\n        margin: '10px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 28\n        }, this), \" \", app.applicantName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 28\n        }, this), \" \", app.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 28\n        }, this), \" \", app.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleStatusChange(app._id, 'Accepted'),\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleStatusChange(app._id, 'Rejected'),\n          children: \"Reject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleStatusChange(app._id, 'Waiting'),\n          children: \"Waiting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this)]\n    }, app._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No applications available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\nexport default UpdateApplication;\nvar _c;\n$RefreshReg$(_c, \"UpdateApplication\");","map":{"version":3,"names":["React","useEffect","useState","API","jsxDEV","_jsxDEV","UpdateApplication","jobId","_s","applications","setApplications","fetchApplications","data","get","error","console","updateStatus","applicationId","newStatus","patch","status","map","app","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","userId","name","email","href","resume","target","rel","onClick","_c","handleStatusChange","post","alert","length","style","border","padding","margin","applicantName","$RefreshReg$"],"sources":["C:/Users/vignesh G/Downloads/mern-job-portal/mern-job-portal/mern-job-portal/frontend/src/components/HR/UpdateApplication.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport API from '../../api';\r\n\r\nconst UpdateApplication = ({ jobId }) => {\r\n    const [applications, setApplications] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApplications = async () => {\r\n            try {\r\n                const { data } = await API.get(`/jobs/${jobId}/applications`);\r\n                setApplications(data.applications);\r\n            } catch (error) {\r\n                console.error('Error fetching applications:', error);\r\n            }\r\n        };\r\n\r\n        fetchApplications();\r\n    }, [jobId]);\r\n\r\n    const updateStatus = async (applicationId, newStatus) => {\r\n        try {\r\n            await API.patch(`/jobs/update-status/${jobId}/${applicationId}`, { status: newStatus });\r\n            setApplications(applications.map(app =>\r\n                app._id === applicationId ? { ...app, status: newStatus } : app\r\n            ));\r\n        } catch (error) {\r\n            console.error('Error updating status:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Applications</h2>\r\n            {applications.map(app => (\r\n                <div key={app._id}>\r\n                    <p>Name: {app.userId.name}</p>\r\n                    <p>Email: {app.userId.email}</p>\r\n                    <p>\r\n                        Resume: <a href={`http://localhost:5000/${app.resume}`} target=\"_blank\" rel=\"noopener noreferrer\">View</a>\r\n                    </p>\r\n                    <p>Status: {app.status}</p>\r\n                    <button onClick={() => updateStatus(app._id, 'waiting')}>Waiting</button>\r\n                    <button onClick={() => updateStatus(app._id, 'accepted')}>Accept</button>\r\n                    <button onClick={() => updateStatus(app._id, 'rejected')}>Reject</button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\nconst handleStatusChange = async (applicationId, status) => {\r\n    try {\r\n        await API.post(`/applications/update-status`, { applicationId, status });\r\n        alert(`Status updated to ${status} and email sent!`);\r\n        const { data } = await API.get(`/applications/${jobId}`);\r\n        setApplications(data);\r\n    } catch (error) {\r\n        console.error('Error updating status:', error);\r\n    }\r\n\r\n return (\r\n        <div>\r\n            <h2>Applications</h2>\r\n            {applications.length > 0 ? (\r\n                applications.map((app) => (\r\n                    <div key={app._id} style={{ border: '1px solid #ddd', padding: '10px', margin: '10px 0' }}>\r\n                        <p><strong>Name:</strong> {app.applicantName}</p>\r\n                        <p><strong>Email:</strong> {app.email}</p>\r\n                        <p><strong>Status:</strong> {app.status}</p>\r\n                        <div>\r\n                            <button onClick={() => handleStatusChange(app._id, 'Accepted')}>Accept</button>\r\n                            <button onClick={() => handleStatusChange(app._id, 'Rejected')}>Reject</button>\r\n                            <button onClick={() => handleStatusChange(app._id, 'Waiting')}>Waiting</button>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No applications available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default UpdateApplication;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}