{"ast":null,"code":"import React,{useEffect,useState}from'react';import API from'../api';import{useNavigate}from'react-router-dom';// Correct import for navigation\nimport'../UserDashboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UserDashboard=()=>{const[jobs,setJobs]=useState([]);const[applications,setApplications]=useState([]);const[selectedJob,setSelectedJob]=useState(null);// Track the job the user is applying for\nconst[resume,setResume]=useState(null);// Track the uploaded resume file\nconst navigate=useNavigate();// useNavigate hook to navigate programmatically\n// Fetch the list of jobs\nconst fetchJobs=async()=>{try{const{data}=await API.get('/jobs');// Fetch all available jobs\nsetJobs(data);}catch(error){console.error('Error fetching jobs:',error);}};// Fetch the user's applications\nconst fetchApplications=async()=>{try{const{data}=await API.get('/jobs/applications');// Fetch user's application statuses\nsetApplications(data);}catch(error){console.error('Error fetching applications:',error);}};useEffect(()=>{fetchJobs();// Call fetchJobs on component mount\nfetchApplications();// Call fetchApplications on component mount\n},[]);// Empty dependency array ensures this runs once after the initial render\nconst handleApply=async()=>{if(!resume){alert('Please upload your resume.');return;}const formData=new FormData();formData.append('resume',resume);try{await API.post(`/jobs/apply/${selectedJob}`,formData,{headers:{'Content-Type':'multipart/form-data'}});alert('Applied successfully!');setSelectedJob(null);// Reset after applying\nsetResume(null);// Reset the resume file input\n// Re-fetch jobs and applications to reflect the new state\nfetchJobs();fetchApplications();}catch(error){var _error$response;console.error('Error applying for job:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);alert('Failed to apply for job.');}};const handleLogout=()=>{// Clear session or token (depending on your app's authentication flow)\nlocalStorage.removeItem('authToken');// Example if using localStorage for token\nnavigate('/login');// Redirect to the login page using navigate\n};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"User Dashboard\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,children:\"Logout\"}),\" \",/*#__PURE__*/_jsx(\"h2\",{children:\"Available Jobs\"}),jobs.length>0?jobs.map(job=>/*#__PURE__*/_jsxs(\"div\",{style:{border:'1px solid #ccc',padding:'10px',margin:'10px 0'},children:[/*#__PURE__*/_jsx(\"h3\",{children:job.title}),/*#__PURE__*/_jsx(\"p\",{children:job.description}),selectedJob===job._id?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:e=>setResume(e.target.files[0]),accept:\".pdf,.doc,.docx\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleApply,children:\"Submit Application\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedJob(null),children:\"Cancel\"})]}):/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedJob(job._id),children:\"Apply Now\"})]},job._id)):/*#__PURE__*/_jsx(\"p\",{children:\"No jobs available at the moment.\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Your Applications\"}),applications.length>0?applications.map(app=>/*#__PURE__*/_jsxs(\"div\",{style:{border:'1px solid #ccc',padding:'10px',margin:'10px 0'},children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Job Title:\"}),\" \",app.title]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Status:\"}),\" \",app.application.status]})]},app.jobId)):/*#__PURE__*/_jsx(\"p\",{children:\"You haven't applied for any jobs yet.\"})]});};export default UserDashboard;","map":{"version":3,"names":["React","useEffect","useState","API","useNavigate","jsx","_jsx","jsxs","_jsxs","UserDashboard","jobs","setJobs","applications","setApplications","selectedJob","setSelectedJob","resume","setResume","navigate","fetchJobs","data","get","error","console","fetchApplications","handleApply","alert","formData","FormData","append","post","headers","_error$response","response","message","handleLogout","localStorage","removeItem","children","onClick","length","map","job","style","border","padding","margin","title","description","_id","type","onChange","e","target","files","accept","app","application","status","jobId"],"sources":["E:/mern-job-portal/mern-job-portal/mern-job-portal/frontend/src/pages/UserDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport API from '../api';\r\nimport { useNavigate } from 'react-router-dom'; // Correct import for navigation\r\nimport '../UserDashboard.css'\r\nconst UserDashboard = () => {\r\n    const [jobs, setJobs] = useState([]);\r\n    const [applications, setApplications] = useState([]);\r\n    const [selectedJob, setSelectedJob] = useState(null); // Track the job the user is applying for\r\n    const [resume, setResume] = useState(null); // Track the uploaded resume file\r\n    const navigate = useNavigate(); // useNavigate hook to navigate programmatically\r\n\r\n    // Fetch the list of jobs\r\n    const fetchJobs = async () => {\r\n        try {\r\n            const { data } = await API.get('/jobs'); // Fetch all available jobs\r\n            setJobs(data);\r\n        } catch (error) {\r\n            console.error('Error fetching jobs:', error);\r\n        }\r\n    };\r\n\r\n    // Fetch the user's applications\r\n    const fetchApplications = async () => {\r\n        try {\r\n            const { data } = await API.get('/jobs/applications'); // Fetch user's application statuses\r\n            setApplications(data);\r\n        } catch (error) {\r\n            console.error('Error fetching applications:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchJobs(); // Call fetchJobs on component mount\r\n        fetchApplications(); // Call fetchApplications on component mount\r\n    }, []); // Empty dependency array ensures this runs once after the initial render\r\n\r\n    const handleApply = async () => {\r\n        if (!resume) {\r\n            alert('Please upload your resume.');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('resume', resume);\r\n\r\n        try {\r\n            await API.post(`/jobs/apply/${selectedJob}`, formData, {\r\n                headers: { 'Content-Type': 'multipart/form-data' },\r\n            });\r\n            alert('Applied successfully!');\r\n            setSelectedJob(null); // Reset after applying\r\n            setResume(null); // Reset the resume file input\r\n            // Re-fetch jobs and applications to reflect the new state\r\n            fetchJobs();\r\n            fetchApplications();\r\n        } catch (error) {\r\n            console.error('Error applying for job:', error.response?.data || error.message);\r\n            alert('Failed to apply for job.');\r\n        }\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        // Clear session or token (depending on your app's authentication flow)\r\n        localStorage.removeItem('authToken'); // Example if using localStorage for token\r\n        navigate('/login'); // Redirect to the login page using navigate\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>User Dashboard</h1>\r\n\r\n            <button onClick={handleLogout}>Logout</button> {/* Logout button */}\r\n\r\n            <h2>Available Jobs</h2>\r\n            {jobs.length > 0 ? (\r\n                jobs.map((job) => (\r\n                    <div key={job._id} style={{ border: '1px solid #ccc', padding: '10px', margin: '10px 0' }}>\r\n                        <h3>{job.title}</h3>\r\n                        <p>{job.description}</p>\r\n                        {selectedJob === job._id ? (\r\n                            <div>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    onChange={(e) => setResume(e.target.files[0])}\r\n                                    accept=\".pdf,.doc,.docx\"\r\n                                />\r\n                                <button onClick={handleApply}>Submit Application</button>\r\n                                <button onClick={() => setSelectedJob(null)}>Cancel</button>\r\n                            </div>\r\n                        ) : (\r\n                            <button onClick={() => setSelectedJob(job._id)}>Apply Now</button>\r\n                        )}\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No jobs available at the moment.</p>\r\n            )}\r\n\r\n            <h2>Your Applications</h2>\r\n            {applications.length > 0 ? (\r\n                applications.map((app) => (\r\n                    <div key={app.jobId} style={{ border: '1px solid #ccc', padding: '10px', margin: '10px 0' }}>\r\n                        <p><strong>Job Title:</strong> {app.title}</p>\r\n                        <p><strong>Status:</strong> {app.application.status}</p>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>You haven't applied for any jobs yet.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}