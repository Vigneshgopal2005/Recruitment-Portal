{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\mern-job-portal\\\\mern-job-portal\\\\frontend\\\\src\\\\components\\\\HR\\\\CreateJob.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport API from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateJob = () => {\n  _s();\n  const [job, setJob] = useState({\n    title: '',\n    description: ''\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await API.post('/jobs/create', job);\n      alert('Job created successfully');\n    } catch (error) {\n      alert(error.response.data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: job.title,\n      onChange: e => setJob({\n        ...job,\n        title: e.target.value\n      }),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Description\",\n      value: job.description,\n      onChange: e => setJob({\n        ...job,\n        description: e.target.value\n      }),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateJob, \"Evx1J7chU0BkUL9m5IQapVmPteE=\");\n_c = CreateJob;\nexport default CreateJob;\nvar _c;\n$RefreshReg$(_c, \"CreateJob\");","map":{"version":3,"names":["React","useState","API","jsxDEV","_jsxDEV","CreateJob","_s","job","setJob","title","description","handleSubmit","e","preventDefault","post","alert","error","response","data","message","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Downloads/mern-job-portal/mern-job-portal/frontend/src/components/HR/CreateJob.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport API from '../../api';\r\n\r\nconst CreateJob = () => {\r\n    const [job, setJob] = useState({ title: '', description: '' });\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await API.post('/jobs/create', job);\r\n            alert('Job created successfully');\r\n        } catch (error) {\r\n            alert(error.response.data.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Create Job</h2>\r\n            <input type=\"text\" placeholder=\"Title\" value={job.title} onChange={(e) => setJob({ ...job, title: e.target.value })} required />\r\n            <textarea placeholder=\"Description\" value={job.description} onChange={(e) => setJob({ ...job, description: e.target.value })} required />\r\n            <button type=\"submit\">Create Job</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default CreateJob;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,KAAK,EAAE,EAAE;IAAEC,WAAW,EAAE;EAAG,CAAC,CAAC;EAE9D,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMX,GAAG,CAACY,IAAI,CAAC,cAAc,EAAEP,GAAG,CAAC;MACnCQ,KAAK,CAAC,0BAA0B,CAAC;IACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZD,KAAK,CAACC,KAAK,CAACC,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC;IACtC;EACJ,CAAC;EAED,oBACIf,OAAA;IAAMgB,QAAQ,EAAET,YAAa;IAAAU,QAAA,gBACzBjB,OAAA;MAAAiB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBrB,OAAA;MAAOsB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,OAAO;MAACC,KAAK,EAAErB,GAAG,CAACE,KAAM;MAACoB,QAAQ,EAAGjB,CAAC,IAAKJ,MAAM,CAAC;QAAE,GAAGD,GAAG;QAAEE,KAAK,EAAEG,CAAC,CAACkB,MAAM,CAACF;MAAM,CAAC,CAAE;MAACG,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChIrB,OAAA;MAAUuB,WAAW,EAAC,aAAa;MAACC,KAAK,EAAErB,GAAG,CAACG,WAAY;MAACmB,QAAQ,EAAGjB,CAAC,IAAKJ,MAAM,CAAC;QAAE,GAAGD,GAAG;QAAEG,WAAW,EAAEE,CAAC,CAACkB,MAAM,CAACF;MAAM,CAAC,CAAE;MAACG,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzIrB,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEf,CAAC;AAACnB,EAAA,CArBID,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAuBf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}