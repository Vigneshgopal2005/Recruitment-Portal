{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\mern-job-portal\\\\mern-job-portal\\\\frontend\\\\src\\\\components\\\\User\\\\JobList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ApplyJob from './ApplyJob';\nimport API from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobList = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [selectedJob, setSelectedJob] = useState(null);\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const {\n          data\n        } = await API.get('/jobs');\n        setJobs(data);\n      } catch (error) {\n        alert(error.response.data.message);\n      }\n    };\n    fetchJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: job.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: job.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedJob(job._id),\n        children: \"Apply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)]\n    }, job._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)), selectedJob && /*#__PURE__*/_jsxDEV(ApplyJob, {\n      jobId: selectedJob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(JobList, \"FcuP12C099xEkGbxVAmWBiI5v74=\");\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","useEffect","useState","ApplyJob","API","jsxDEV","_jsxDEV","JobList","_s","jobs","setJobs","selectedJob","setSelectedJob","fetchJobs","data","get","error","alert","response","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","job","title","description","onClick","_id","jobId","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Downloads/mern-job-portal/mern-job-portal/frontend/src/components/User/JobList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ApplyJob from './ApplyJob';\r\nimport API from '../../api';\r\n\r\nconst JobList = () => {\r\n    const [jobs, setJobs] = useState([]);\r\n    const [selectedJob, setSelectedJob] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchJobs = async () => {\r\n            try {\r\n                const { data } = await API.get('/jobs');\r\n                setJobs(data);\r\n            } catch (error) {\r\n                alert(error.response.data.message);\r\n            }\r\n        };\r\n        fetchJobs();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Available Jobs</h2>\r\n            {jobs.map((job) => (\r\n                <div key={job._id}>\r\n                    <h3>{job.title}</h3>\r\n                    <p>{job.description}</p>\r\n                    <button onClick={() => setSelectedJob(job._id)}>Apply</button>\r\n                </div>\r\n            ))}\r\n            {selectedJob && <ApplyJob jobId={selectedJob} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JobList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,GAAG,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACZ,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAC,OAAO,CAAC;QACvCL,OAAO,CAACI,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,KAAK,CAACD,KAAK,CAACE,QAAQ,CAACJ,IAAI,CAACK,OAAO,CAAC;MACtC;IACJ,CAAC;IACDN,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBf,IAAI,CAACgB,GAAG,CAAEC,GAAG,iBACVpB,OAAA;MAAAc,QAAA,gBACId,OAAA;QAAAc,QAAA,EAAKM,GAAG,CAACC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBlB,OAAA;QAAAc,QAAA,EAAIM,GAAG,CAACE;MAAW;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBlB,OAAA;QAAQuB,OAAO,EAAEA,CAAA,KAAMjB,cAAc,CAACc,GAAG,CAACI,GAAG,CAAE;QAAAV,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAHxDE,GAAG,CAACI,GAAG;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIZ,CACR,CAAC,EACDb,WAAW,iBAAIL,OAAA,CAACH,QAAQ;MAAC4B,KAAK,EAAEpB;IAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEd,CAAC;AAAChB,EAAA,CA7BID,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AA+Bb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}