{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\mern-job-portal\\\\mern-job-portal\\\\frontend\\\\src\\\\pages\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport API from '../../api'; // Adjust the path if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [applications, setApplications] = useState([]);\n\n  // Fetch the list of jobs\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const {\n          data\n        } = await API.get('/jobs'); // Fetch all available jobs\n        setJobs(data);\n      } catch (error) {\n        console.error('Error fetching jobs:', error);\n      }\n    };\n    fetchJobs();\n  }, []);\n\n  // Fetch the user's applications\n  useEffect(() => {\n    const fetchApplications = async () => {\n      try {\n        const {\n          data\n        } = await API.get('/jobs/applications'); // Fetch user's application statuses\n        setApplications(data);\n      } catch (error) {\n        console.error('Error fetching applications:', error);\n      }\n    };\n    fetchApplications();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), jobs.length > 0 ? jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        margin: '10px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: job.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: job.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          try {\n            const formData = new FormData();\n            // Assume `resume` is a file input field in your actual implementation\n            formData.append('resume', new Blob(), 'example.pdf'); // Replace with the actual resume file\n            await API.post(`/jobs/apply/${job._id}`, formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            });\n            alert('Applied successfully!');\n          } catch (error) {\n            console.error('Error applying for job:', error);\n            alert('Failed to apply for job.');\n          }\n        },\n        children: \"Apply Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this)]\n    }, job._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No jobs available at the moment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), applications.length > 0 ? applications.map(app => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        margin: '10px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Job Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 28\n        }, this), \" \", app.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 28\n        }, this), \" \", app.application.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this)]\n    }, app.jobId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You haven't applied for any jobs yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(UserDashboard, \"b21PjHw49gaDCRk5UlG0ubJg06M=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useEffect","useState","API","jsxDEV","_jsxDEV","UserDashboard","_s","jobs","setJobs","applications","setApplications","fetchJobs","data","get","error","console","fetchApplications","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","job","style","border","padding","margin","title","description","onClick","formData","FormData","append","Blob","post","_id","headers","alert","app","application","status","jobId","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Downloads/mern-job-portal/mern-job-portal/frontend/src/pages/UserDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport API from '../../api'; // Adjust the path if needed\r\n\r\nconst UserDashboard = () => {\r\n    const [jobs, setJobs] = useState([]);\r\n    const [applications, setApplications] = useState([]);\r\n\r\n    // Fetch the list of jobs\r\n    useEffect(() => {\r\n        const fetchJobs = async () => {\r\n            try {\r\n                const { data } = await API.get('/jobs'); // Fetch all available jobs\r\n                setJobs(data);\r\n            } catch (error) {\r\n                console.error('Error fetching jobs:', error);\r\n            }\r\n        };\r\n\r\n        fetchJobs();\r\n    }, []);\r\n\r\n    // Fetch the user's applications\r\n    useEffect(() => {\r\n        const fetchApplications = async () => {\r\n            try {\r\n                const { data } = await API.get('/jobs/applications'); // Fetch user's application statuses\r\n                setApplications(data);\r\n            } catch (error) {\r\n                console.error('Error fetching applications:', error);\r\n            }\r\n        };\r\n\r\n        fetchApplications();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>User Dashboard</h1>\r\n\r\n            <h2>Available Jobs</h2>\r\n            {jobs.length > 0 ? (\r\n                jobs.map(job => (\r\n                    <div key={job._id} style={{ border: '1px solid #ccc', padding: '10px', margin: '10px 0' }}>\r\n                        <h3>{job.title}</h3>\r\n                        <p>{job.description}</p>\r\n                        <button\r\n                            onClick={async () => {\r\n                                try {\r\n                                    const formData = new FormData();\r\n                                    // Assume `resume` is a file input field in your actual implementation\r\n                                    formData.append('resume', new Blob(), 'example.pdf'); // Replace with the actual resume file\r\n                                    await API.post(`/jobs/apply/${job._id}`, formData, {\r\n                                        headers: { 'Content-Type': 'multipart/form-data' },\r\n                                    });\r\n                                    alert('Applied successfully!');\r\n                                } catch (error) {\r\n                                    console.error('Error applying for job:', error);\r\n                                    alert('Failed to apply for job.');\r\n                                }\r\n                            }}\r\n                        >\r\n                            Apply Now\r\n                        </button>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No jobs available at the moment.</p>\r\n            )}\r\n\r\n            <h2>Your Applications</h2>\r\n            {applications.length > 0 ? (\r\n                applications.map(app => (\r\n                    <div key={app.jobId} style={{ border: '1px solid #ccc', padding: '10px', margin: '10px 0' }}>\r\n                        <p><strong>Job Title:</strong> {app.title}</p>\r\n                        <p><strong>Status:</strong> {app.application.status}</p>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>You haven't applied for any jobs yet.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}