{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vignesh G\\\\Downloads\\\\mern-job-portal\\\\mern-job-portal\\\\mern-job-portal\\\\frontend\\\\src\\\\pages\\\\HRDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport API from '../api';\nimport CreateJob from '../components/HR/CreateJob';\nimport UpdateApplication from '../components/HR/UpdateApplication';\nimport '../HRDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HRDashboard = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [selectedJob, setSelectedJob] = useState(null);\n\n  // Fetch jobs from the server\n  const fetchJobs = async () => {\n    try {\n      const {\n        data\n      } = await API.get('/jobs');\n      setJobs(data);\n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n    }\n  };\n\n  // Fetch jobs when the component loads\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n\n  // Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem('token'); // Assuming you're using token-based auth\n    window.location.href = '/login'; // Redirect to login page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"HR Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        backgroundColor: '#f44336',\n        color: 'white',\n        padding: '10px 15px',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer',\n        float: 'right'\n      },\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateJob, {\n      onJobCreated: () => {\n        fetchJobs(); // Refresh the job list after a new job is created\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Job Listings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), jobs.length > 0 ? jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        margin: '10px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: job.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: job.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedJob(job._id),\n        children: \"View Applications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this)]\n    }, job._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No jobs available at the moment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), selectedJob && /*#__PURE__*/_jsxDEV(UpdateApplication, {\n      jobId: selectedJob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(HRDashboard, \"FcuP12C099xEkGbxVAmWBiI5v74=\");\n_c = HRDashboard;\nexport default HRDashboard;\nvar _c;\n$RefreshReg$(_c, \"HRDashboard\");","map":{"version":3,"names":["React","useState","useEffect","API","CreateJob","UpdateApplication","jsxDEV","_jsxDEV","HRDashboard","_s","jobs","setJobs","selectedJob","setSelectedJob","fetchJobs","data","get","error","console","handleLogout","localStorage","removeItem","window","location","href","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","color","padding","border","borderRadius","cursor","float","onClick","onJobCreated","length","map","job","margin","title","description","_id","jobId","_c","$RefreshReg$"],"sources":["C:/Users/vignesh G/Downloads/mern-job-portal/mern-job-portal/mern-job-portal/frontend/src/pages/HRDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport API from '../api';\r\nimport CreateJob from '../components/HR/CreateJob';\r\nimport UpdateApplication from '../components/HR/UpdateApplication';\r\nimport '../HRDashboard.css';\r\nconst HRDashboard = () => {\r\n    const [jobs, setJobs] = useState([]);\r\n    const [selectedJob, setSelectedJob] = useState(null);\r\n\r\n    // Fetch jobs from the server\r\n    const fetchJobs = async () => {\r\n        try {\r\n            const { data } = await API.get('/jobs');\r\n            setJobs(data);\r\n        } catch (error) {\r\n            console.error('Error fetching jobs:', error);\r\n        }\r\n    };\r\n\r\n    // Fetch jobs when the component loads\r\n    useEffect(() => {\r\n        fetchJobs();\r\n    }, []);\r\n\r\n    // Handle logout\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('token'); // Assuming you're using token-based auth\r\n        window.location.href = '/login'; // Redirect to login page\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>HR Dashboard</h1>\r\n\r\n            {/* Logout Button */}\r\n            <button\r\n                style={{\r\n                    backgroundColor: '#f44336',\r\n                    color: 'white',\r\n                    padding: '10px 15px',\r\n                    border: 'none',\r\n                    borderRadius: '5px',\r\n                    cursor: 'pointer',\r\n                    float: 'right',\r\n                }}\r\n                onClick={handleLogout}\r\n            >\r\n                Logout\r\n            </button>\r\n\r\n            {/* Create New Job Section */}\r\n            <CreateJob\r\n                onJobCreated={() => {\r\n                    fetchJobs(); // Refresh the job list after a new job is created\r\n                }}\r\n            />\r\n\r\n            {/* Job Listings */}\r\n            <h2>Job Listings</h2>\r\n            {jobs.length > 0 ? (\r\n                jobs.map((job) => (\r\n                    <div key={job._id} style={{ border: '1px solid #ccc', padding: '10px', margin: '10px 0' }}>\r\n                        <h3>{job.title}</h3>\r\n                        <p>{job.description}</p>\r\n                        <button onClick={() => setSelectedJob(job._id)}>View Applications</button>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No jobs available at the moment.</p>\r\n            )}\r\n\r\n            {/* View Applications for a Selected Job */}\r\n            {selectedJob && <UpdateApplication jobId={selectedJob} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HRDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,iBAAiB,MAAM,oCAAoC;AAClE,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACA,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMZ,GAAG,CAACa,GAAG,CAAC,OAAO,CAAC;MACvCL,OAAO,CAACI,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACZY,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACvBC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;IAClCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;EACrC,CAAC;EAED,oBACIjB,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGrBtB,OAAA;MACIuB,KAAK,EAAE;QACHC,eAAe,EAAE,SAAS;QAC1BC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE,WAAW;QACpBC,MAAM,EAAE,MAAM;QACdC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE;MACX,CAAE;MACFC,OAAO,EAAEnB,YAAa;MAAAM,QAAA,EACzB;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGTtB,OAAA,CAACH,SAAS;MACNmC,YAAY,EAAEA,CAAA,KAAM;QAChBzB,SAAS,CAAC,CAAC,CAAC,CAAC;MACjB;IAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGFtB,OAAA;MAAAkB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBnB,IAAI,CAAC8B,MAAM,GAAG,CAAC,GACZ9B,IAAI,CAAC+B,GAAG,CAAEC,GAAG,iBACTnC,OAAA;MAAmBuB,KAAK,EAAE;QAAEI,MAAM,EAAE,gBAAgB;QAAED,OAAO,EAAE,MAAM;QAAEU,MAAM,EAAE;MAAS,CAAE;MAAAlB,QAAA,gBACtFlB,OAAA;QAAAkB,QAAA,EAAKiB,GAAG,CAACE;MAAK;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBtB,OAAA;QAAAkB,QAAA,EAAIiB,GAAG,CAACG;MAAW;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBtB,OAAA;QAAQ+B,OAAO,EAAEA,CAAA,KAAMzB,cAAc,CAAC6B,GAAG,CAACI,GAAG,CAAE;QAAArB,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAHpEa,GAAG,CAACI,GAAG;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIZ,CACR,CAAC,gBAEFtB,OAAA;MAAAkB,QAAA,EAAG;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACzC,EAGAjB,WAAW,iBAAIL,OAAA,CAACF,iBAAiB;MAAC0C,KAAK,EAAEnC;IAAY;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEd,CAAC;AAACpB,EAAA,CAtEID,WAAW;AAAAwC,EAAA,GAAXxC,WAAW;AAwEjB,eAAeA,WAAW;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}