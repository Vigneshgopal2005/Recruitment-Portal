{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\mern-job-portal\\\\mern-job-portal\\\\frontend\\\\src\\\\components\\\\HR\\\\UpdateApplication.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport API from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateApplication = ({\n  jobId\n}) => {\n  _s();\n  const [applications, setApplications] = useState([]);\n  const [status, setStatus] = useState('');\n  useEffect(() => {\n    const fetchApplications = async () => {\n      try {\n        const {\n          data\n        } = await API.get(`/jobs/${jobId}`);\n        setApplications(data.applications);\n      } catch (error) {\n        alert(error.response.data.message);\n      }\n    };\n    fetchApplications();\n  }, [jobId]);\n  const handleStatusUpdate = async applicationId => {\n    try {\n      await API.patch(`/jobs/update-status/${jobId}/${applicationId}`, {\n        status\n      });\n      alert('Status updated successfully');\n      setApplications(prev => prev.map(app => app._id === applicationId ? {\n        ...app,\n        status\n      } : app));\n    } catch (error) {\n      alert(error.response.data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Application Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), applications.map(app => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User ID: \", app.userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", app.status || 'Pending']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setStatus(e.target.value),\n        value: status,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"waiting list\",\n          children: \"Waiting List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"accepted\",\n          children: \"Accepted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"rejected\",\n          children: \"Rejected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleStatusUpdate(app._id),\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, app._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdateApplication, \"ubDtb54yINgrTJBpA6770yU8Qdw=\");\n_c = UpdateApplication;\nexport default UpdateApplication;\nvar _c;\n$RefreshReg$(_c, \"UpdateApplication\");","map":{"version":3,"names":["React","useEffect","useState","API","jsxDEV","_jsxDEV","UpdateApplication","jobId","_s","applications","setApplications","status","setStatus","fetchApplications","data","get","error","alert","response","message","handleStatusUpdate","applicationId","patch","prev","map","app","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","userId","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Downloads/mern-job-portal/mern-job-portal/frontend/src/components/HR/UpdateApplication.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport API from '../../api';\r\n\r\nconst UpdateApplication = ({ jobId }) => {\r\n    const [applications, setApplications] = useState([]);\r\n    const [status, setStatus] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchApplications = async () => {\r\n            try {\r\n                const { data } = await API.get(`/jobs/${jobId}`);\r\n                setApplications(data.applications);\r\n            } catch (error) {\r\n                alert(error.response.data.message);\r\n            }\r\n        };\r\n        fetchApplications();\r\n    }, [jobId]);\r\n\r\n    const handleStatusUpdate = async (applicationId) => {\r\n        try {\r\n            await API.patch(`/jobs/update-status/${jobId}/${applicationId}`, { status });\r\n            alert('Status updated successfully');\r\n            setApplications((prev) =>\r\n                prev.map((app) =>\r\n                    app._id === applicationId ? { ...app, status } : app\r\n                )\r\n            );\r\n        } catch (error) {\r\n            alert(error.response.data.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Update Application Status</h2>\r\n            {applications.map((app) => (\r\n                <div key={app._id}>\r\n                    <p>User ID: {app.userId}</p>\r\n                    <p>Status: {app.status || 'Pending'}</p>\r\n                    <select\r\n                        onChange={(e) => setStatus(e.target.value)}\r\n                        value={status}\r\n                    >\r\n                        <option value=\"waiting list\">Waiting List</option>\r\n                        <option value=\"accepted\">Accepted</option>\r\n                        <option value=\"rejected\">Rejected</option>\r\n                    </select>\r\n                    <button onClick={() => handleStatusUpdate(app._id)}>Update</button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpdateApplication;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}