{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\mern-job-portal\\\\mern-job-portal\\\\frontend\\\\src\\\\pages\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport API from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [applications, setApplications] = useState([]);\n\n  // Fetch the list of jobs\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const {\n          data\n        } = await API.get('/jobs'); // Fetch all available jobs\n        setJobs(data);\n      } catch (error) {\n        console.error('Error fetching jobs:', error);\n      }\n    };\n    fetchJobs();\n  }, []);\n\n  // Fetch the user's applications\n  useEffect(() => {\n    const fetchApplications = async () => {\n      try {\n        const {\n          data\n        } = await API.get('/jobs/applications'); // Fetch user's application statuses\n        setApplications(data);\n      } catch (error) {\n        console.error('Error fetching applications:', error);\n      }\n    };\n    fetchApplications();\n  }, []);\n  const handleApply = async (jobId, file) => {\n    if (!file) {\n      alert('Please upload your resume before applying.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('resume', file);\n    try {\n      await API.post(`/jobs/apply/${jobId}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Applied successfully!');\n    } catch (error) {\n      var _error$response;\n      console.error('Error applying for job:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert('Failed to apply for job.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), jobs.length > 0 ? jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        margin: '10px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: job.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: job.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => handleApply(job._id, e.target.files[0]),\n        accept: \".pdf,.doc,.docx\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this)]\n    }, job._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No jobs available at the moment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), applications.length > 0 ? applications.map(app => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        margin: '10px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Job Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 28\n        }, this), \" \", app.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 28\n        }, this), \" \", app.application.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this)]\n    }, app.jobId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You haven't applied for any jobs yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(UserDashboard, \"b21PjHw49gaDCRk5UlG0ubJg06M=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useEffect","useState","API","jsxDEV","_jsxDEV","UserDashboard","_s","jobs","setJobs","applications","setApplications","fetchJobs","data","get","error","console","fetchApplications","handleApply","jobId","file","alert","formData","FormData","append","post","headers","_error$response","response","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","job","style","border","padding","margin","title","description","type","onChange","e","_id","target","files","accept","app","application","status","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Downloads/mern-job-portal/mern-job-portal/frontend/src/pages/UserDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport API from '../api';\r\n\r\nconst UserDashboard = () => {\r\n    const [jobs, setJobs] = useState([]);\r\n    const [applications, setApplications] = useState([]);\r\n\r\n    // Fetch the list of jobs\r\n    useEffect(() => {\r\n        const fetchJobs = async () => {\r\n            try {\r\n                const { data } = await API.get('/jobs'); // Fetch all available jobs\r\n                setJobs(data);\r\n            } catch (error) {\r\n                console.error('Error fetching jobs:', error);\r\n            }\r\n        };\r\n\r\n        fetchJobs();\r\n    }, []);\r\n\r\n    // Fetch the user's applications\r\n    useEffect(() => {\r\n        const fetchApplications = async () => {\r\n            try {\r\n                const { data } = await API.get('/jobs/applications'); // Fetch user's application statuses\r\n                setApplications(data);\r\n            } catch (error) {\r\n                console.error('Error fetching applications:', error);\r\n            }\r\n        };\r\n\r\n        fetchApplications();\r\n    }, []);\r\n\r\n    const handleApply = async (jobId, file) => {\r\n        if (!file) {\r\n            alert('Please upload your resume before applying.');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('resume', file);\r\n\r\n        try {\r\n            await API.post(`/jobs/apply/${jobId}`, formData, {\r\n                headers: { 'Content-Type': 'multipart/form-data' },\r\n            });\r\n            alert('Applied successfully!');\r\n        } catch (error) {\r\n            console.error('Error applying for job:', error.response?.data || error.message);\r\n            alert('Failed to apply for job.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>User Dashboard</h1>\r\n\r\n            <h2>Available Jobs</h2>\r\n            {jobs.length > 0 ? (\r\n                jobs.map((job) => (\r\n                    <div key={job._id} style={{ border: '1px solid #ccc', padding: '10px', margin: '10px 0' }}>\r\n                        <h3>{job.title}</h3>\r\n                        <p>{job.description}</p>\r\n                        <input\r\n                            type=\"file\"\r\n                            onChange={(e) => handleApply(job._id, e.target.files[0])}\r\n                            accept=\".pdf,.doc,.docx\"\r\n                        />\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No jobs available at the moment.</p>\r\n            )}\r\n\r\n            <h2>Your Applications</h2>\r\n            {applications.length > 0 ? (\r\n                applications.map((app) => (\r\n                    <div key={app.jobId} style={{ border: '1px solid #ccc', padding: '10px', margin: '10px 0' }}>\r\n                        <p><strong>Job Title:</strong> {app.title}</p>\r\n                        <p><strong>Status:</strong> {app.application.status}</p>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>You haven't applied for any jobs yet.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}