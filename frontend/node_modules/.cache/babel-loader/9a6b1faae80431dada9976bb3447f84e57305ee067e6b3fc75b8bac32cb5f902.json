{"ast":null,"code":"import React,{useState,useEffect}from'react';import API from'../api';import CreateJob from'../components/HR/CreateJob';import UpdateApplication from'../components/HR/UpdateApplication';import'../HRDashboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HRDashboard=()=>{const[jobs,setJobs]=useState([]);const[selectedJob,setSelectedJob]=useState(null);// Fetch jobs from the server\nconst fetchJobs=async()=>{try{const{data}=await API.get('/jobs');setJobs(data);}catch(error){console.error('Error fetching jobs:',error);}};// Fetch jobs when the component loads\nuseEffect(()=>{fetchJobs();},[]);// Handle logout\nconst handleLogout=()=>{localStorage.removeItem('token');// Assuming you're using token-based auth\nwindow.location.href='/login';// Redirect to login page\n};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"HR Dashboard\"}),/*#__PURE__*/_jsx(\"button\",{style:{backgroundColor:'#f44336',color:'white',padding:'10px 15px',border:'none',borderRadius:'5px',cursor:'pointer',float:'right'},onClick:handleLogout,children:\"Logout\"}),/*#__PURE__*/_jsx(CreateJob,{onJobCreated:()=>{fetchJobs();// Refresh the job list after a new job is created\n}}),/*#__PURE__*/_jsx(\"h2\",{children:\"Job Listings\"}),jobs.length>0?jobs.map(job=>/*#__PURE__*/_jsxs(\"div\",{style:{border:'1px solid #ccc',padding:'10px',margin:'10px 0'},children:[/*#__PURE__*/_jsx(\"h3\",{children:job.title}),/*#__PURE__*/_jsx(\"p\",{children:job.description}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedJob(job._id),children:\"View Applications\"})]},job._id)):/*#__PURE__*/_jsx(\"p\",{children:\"No jobs available at the moment.\"}),selectedJob&&/*#__PURE__*/_jsx(UpdateApplication,{jobId:selectedJob})]});};export default HRDashboard;","map":{"version":3,"names":["React","useState","useEffect","API","CreateJob","UpdateApplication","jsx","_jsx","jsxs","_jsxs","HRDashboard","jobs","setJobs","selectedJob","setSelectedJob","fetchJobs","data","get","error","console","handleLogout","localStorage","removeItem","window","location","href","children","style","backgroundColor","color","padding","border","borderRadius","cursor","float","onClick","onJobCreated","length","map","job","margin","title","description","_id","jobId"],"sources":["E:/mern-job-portal/mern-job-portal/mern-job-portal/frontend/src/pages/HRDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport API from '../api';\r\nimport CreateJob from '../components/HR/CreateJob';\r\nimport UpdateApplication from '../components/HR/UpdateApplication';\r\nimport '../HRDashboard.css';\r\nconst HRDashboard = () => {\r\n    const [jobs, setJobs] = useState([]);\r\n    const [selectedJob, setSelectedJob] = useState(null);\r\n\r\n    // Fetch jobs from the server\r\n    const fetchJobs = async () => {\r\n        try {\r\n            const { data } = await API.get('/jobs');\r\n            setJobs(data);\r\n        } catch (error) {\r\n            console.error('Error fetching jobs:', error);\r\n        }\r\n    };\r\n\r\n    // Fetch jobs when the component loads\r\n    useEffect(() => {\r\n        fetchJobs();\r\n    }, []);\r\n\r\n    // Handle logout\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('token'); // Assuming you're using token-based auth\r\n        window.location.href = '/login'; // Redirect to login page\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>HR Dashboard</h1>\r\n\r\n            {/* Logout Button */}\r\n            <button\r\n                style={{\r\n                    backgroundColor: '#f44336',\r\n                    color: 'white',\r\n                    padding: '10px 15px',\r\n                    border: 'none',\r\n                    borderRadius: '5px',\r\n                    cursor: 'pointer',\r\n                    float: 'right',\r\n                }}\r\n                onClick={handleLogout}\r\n            >\r\n                Logout\r\n            </button>\r\n\r\n            {/* Create New Job Section */}\r\n            <CreateJob\r\n                onJobCreated={() => {\r\n                    fetchJobs(); // Refresh the job list after a new job is created\r\n                }}\r\n            />\r\n\r\n            {/* Job Listings */}\r\n            <h2>Job Listings</h2>\r\n            {jobs.length > 0 ? (\r\n                jobs.map((job) => (\r\n                    <div key={job._id} style={{ border: '1px solid #ccc', padding: '10px', margin: '10px 0' }}>\r\n                        <h3>{job.title}</h3>\r\n                        <p>{job.description}</p>\r\n                        <button onClick={() => setSelectedJob(job._id)}>View Applications</button>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No jobs available at the moment.</p>\r\n            )}\r\n\r\n            {/* View Applications for a Selected Job */}\r\n            {selectedJob && <UpdateApplication jobId={selectedJob} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HRDashboard;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,GAAG,KAAM,QAAQ,CACxB,MAAO,CAAAC,SAAS,KAAM,4BAA4B,CAClD,MAAO,CAAAC,iBAAiB,KAAM,oCAAoC,CAClE,MAAO,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAC5B,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACY,WAAW,CAAEC,cAAc,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAEpD;AACA,KAAM,CAAAc,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC1B,GAAI,CACA,KAAM,CAAEC,IAAK,CAAC,CAAG,KAAM,CAAAb,GAAG,CAACc,GAAG,CAAC,OAAO,CAAC,CACvCL,OAAO,CAACI,IAAI,CAAC,CACjB,CAAE,MAAOE,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAChD,CACJ,CAAC,CAED;AACAhB,SAAS,CAAC,IAAM,CACZa,SAAS,CAAC,CAAC,CACf,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAK,YAAY,CAAGA,CAAA,GAAM,CACvBC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC,CAAE;AAClCC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,QAAQ,CAAE;AACrC,CAAC,CAED,mBACIhB,KAAA,QAAAiB,QAAA,eACInB,IAAA,OAAAmB,QAAA,CAAI,cAAY,CAAI,CAAC,cAGrBnB,IAAA,WACIoB,KAAK,CAAE,CACHC,eAAe,CAAE,SAAS,CAC1BC,KAAK,CAAE,OAAO,CACdC,OAAO,CAAE,WAAW,CACpBC,MAAM,CAAE,MAAM,CACdC,YAAY,CAAE,KAAK,CACnBC,MAAM,CAAE,SAAS,CACjBC,KAAK,CAAE,OACX,CAAE,CACFC,OAAO,CAAEf,YAAa,CAAAM,QAAA,CACzB,QAED,CAAQ,CAAC,cAGTnB,IAAA,CAACH,SAAS,EACNgC,YAAY,CAAEA,CAAA,GAAM,CAChBrB,SAAS,CAAC,CAAC,CAAE;AACjB,CAAE,CACL,CAAC,cAGFR,IAAA,OAAAmB,QAAA,CAAI,cAAY,CAAI,CAAC,CACpBf,IAAI,CAAC0B,MAAM,CAAG,CAAC,CACZ1B,IAAI,CAAC2B,GAAG,CAAEC,GAAG,eACT9B,KAAA,QAAmBkB,KAAK,CAAE,CAAEI,MAAM,CAAE,gBAAgB,CAAED,OAAO,CAAE,MAAM,CAAEU,MAAM,CAAE,QAAS,CAAE,CAAAd,QAAA,eACtFnB,IAAA,OAAAmB,QAAA,CAAKa,GAAG,CAACE,KAAK,CAAK,CAAC,cACpBlC,IAAA,MAAAmB,QAAA,CAAIa,GAAG,CAACG,WAAW,CAAI,CAAC,cACxBnC,IAAA,WAAQ4B,OAAO,CAAEA,CAAA,GAAMrB,cAAc,CAACyB,GAAG,CAACI,GAAG,CAAE,CAAAjB,QAAA,CAAC,mBAAiB,CAAQ,CAAC,GAHpEa,GAAG,CAACI,GAIT,CACR,CAAC,cAEFpC,IAAA,MAAAmB,QAAA,CAAG,kCAAgC,CAAG,CACzC,CAGAb,WAAW,eAAIN,IAAA,CAACF,iBAAiB,EAACuC,KAAK,CAAE/B,WAAY,CAAE,CAAC,EACxD,CAAC,CAEd,CAAC,CAED,cAAe,CAAAH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}